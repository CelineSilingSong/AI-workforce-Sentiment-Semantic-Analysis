URL link,Title,Date,Source,Source Link,description,keywords,og:description,twitter:description,article:section,article:summary,article text,@context,@type,headline,url,image,datePublished,dateModified,articleSection,author,publisher,mainEntityOfPage,@graph,thumbnailUrl,creator,dateCreated
https://news.google.com/rss/articles/CBMiaGh0dHBzOi8vd3d3LmJ1bmQtdmVybGFnLmRlL2FrdHVlbGxlc35Fcy1nZWh0LXVtLUdlc3VuZGhlaXQtQmVzY2hhZWZ0aWd0ZW5kYXRlbi11bmQtRnJlaWhlaXRzcmVjaHRlfi5odG1s0gEA?oc=5,KI – Herausforderung für die Mitbestimmung - Bund Verlag,2020-08-20,Bund Verlag,https://www.bund-verlag.de,Künstliche Intelligenz formt die Arbeitswelt: Die (mögliche) Überwachung und die Fremdsteuerung durch IT-Systeme bei der Arbeit sind...,,Künstliche Intelligenz formt die Arbeitswelt: Die (mögliche) Überwachung und die Fremdsteuerung durch IT-Systeme bei der Arbeit sind gesundheitsgefährdende  Stressfaktoren. KI-Auswertungen bergen Diskriminierungspotenzial. In »Gute Arbeit« 8-9/2020 plädiert Prof. Dr. Peter Wedde für die Wahrung der Mitbestimmung und die Überwachung des IT-Einsatzes.,Künstliche Intelligenz formt die Arbeitswelt: Die (mögliche) Überwachung und die Fremdsteuerung durch IT-Systeme bei der Arbeit sind gesundheitsgefährdende  Stressfaktoren. KI-Auswertungen bergen Diskriminierungspotenzial. In »Gute Arbeit« 8-9/2020 plädiert Prof. Dr. Peter Wedde für die Wahrung der Mitbestimmung und die Überwachung des IT-Einsatzes.,N/A,N/A,"

KI – Herausforderung für die Mitbestimmung



20. August 2020

Künstliche Intelligenz,
                                    KI






Quelle: pixabay


Künstliche Intelligenz formt die Arbeitswelt: Die (mögliche) Überwachung und die Fremdsteuerung durch IT-Systeme bei der Arbeit sind gesundheitsgefährdende  Stressfaktoren. KI-Auswertungen bergen Diskriminierungspotenzial. In »Gute Arbeit« 8-9/2020 plädiert Prof. Dr. Peter Wedde für die Wahrung der Mitbestimmung und die Überwachung des IT-Einsatzes.

Womit haben wir es zu tun? Bei Künstlicher Intelligenz (KI) handelt es sich um Systeme, die auf der Basis von Methoden aus der Mathematik und der Informatik konkrete Anwendungsprobleme lösen und die dabei zur Selbstoptimierung in der Lage sind. KI-Software enthält in der Regel »selbstlernende Algorithmen«. Der Begriff »Algorithmus« steht nach der sprachlichen Definition für einen Rechenvorgang nach einem bestimmten Schema, der sich wiederholt.Bezogen auf KI lassen sich Algorithmen als operative Verarbeitungsvorschriften beschreiben, mit denen ein Ablaufplan als eine Folge von Verarbeitungsschritten spezifiziert wird. Algorithmen sollen ein angestrebtes Ergebnis durch die schrittweise Transformation von Eingangsdaten erzielen.KI – menschlich oder unmenschlich programmiertWas der Algorithmus kann, wie weit er geht und welche Annahmen er setzt, das denken sich menschliche Köpfe aus, auch die Auftrag- oder Arbeitgeber. Die Vorgaben werden in Programme umgesetzt, die Systeme zunächst mit Daten gefüttert: Sie sind die Arbeits- und Rechengrundlage für autonome Prozesse.KI kann gut in Arbeitsbereichen eingesetzt werden, in denen wiederkehrende und standardisierbare Abläufe vorkommen: etwa bei der Personalauswahl, Vertragsgestaltung, Personalbetreuung, Qualifizierung, Beendigung von Arbeitsverhältnissen etc. Ziel ist es, dass Algorithmen die KI Systeme so steuern, dass aus Informationen oder Daten (neue) Muster abgeleitet und Handlungsvorschläge generiert werden.Ein Problem dabei: Die Arbeitsschritte in »Dunkelverarbeitung« laufen maschinell vom Computer per Algorithmus gesteuert ab, nicht mehr (allein) von Menschen autorisiert. Dabei ist zentral, dass eine endgültige Entscheidung, die Menschen betrifft und auch aus ethischen Gründen nicht einer Maschine überlassen werden darf. Selbstlernende Algorithmen, die z.B. Auswahlentscheidungen unter Verstoß gegen das Allgemeine Gleichstellungsgesetz (AGG) zulassen, also etwa Bewerber*innen aufgrund des Geschlechts, des Alters oder der Herkunft diskriminieren, sind unzulässig und zu verhindern.Erlaubt ist nicht, was gefälltDer ausführliche Beitrag von Prof. Dr. Peter Wedde in der Zeitschrift »Gute Arbeit« (8-9/2020, S. 13-17) klärt Begriffe und schärft die Perspektive auf Problemlagen beim KI-Einsatz – Stichwort Missbrauchstatbestände. Er erklärt die Individualrechte der Beschäftigten und erläutert, wie die Interessenvertretung kollektivrechtlich und mitbestimmt ihre Informations-, Kontroll- und Mitgestaltungsrechte durchsetzt. Der Aufgabenkatalog der Mitbestimmungstatbestände für Betriebsräte wird durchdekliniert. Berührt werden z.B.die Ordnung im Betriebdie Mitbestimmung beim Technikeinsatzdie Mitbestimmung im Arbeits- und Gesundheitsschutz.Dem starken Arbeitgeber steht erst recht in der digitalen Arbeitswelt die schwächere Partei gegenüber: Die Beschäftigten sind in dieser modernen Gemengelage darauf angewiesen, dass alle arbeitsrechtlichen Regelungen zu ihrem Schutz genutzt und umgesetzt werden: Schutz der Gesundheit, Schutz vor totaler Überwachung, der Begrenzung der Arbeitszeit, Schutz der Menschenwürde, der Privat- und Freiheitsphäre.Weitere Informationen Titelthema der Ausgabe »Gute Arbeit« 8-9/2020: »Künstliche Intelligenz: Herausforderung für die Mitbestimmung«. Darin der umfassende Fachbeitrag von Prof. Dr. Peter Wedde »Moderne Zeiten und Beschäftigtendaten« (S. 13-17). Außerdem im Titelthema lesen:Oliver Suchy (DGB): »Gute Arbeit durch künstliche Intelligenz?« (S. 8-12).Dr. Nadine Müller (ver.di): »KI und Gute Arbeit by Design« (S. 18-21).Mattias Ruchhöft (dtb Kassel): »App, KI, Video und was noch?« (S. 22-23).Für die Online-Ausgabe registrierte Abonnent(inn)en von »Gute Arbeit« greifen im Archiv kostenfrei auf alle Beiträge der Zeitschrift zu (ab Ausgabe 1/2012).Jetzt 2 Ausgaben »Gute Arbeit« gratis testen und sofort online auf alle Inhalte zugreifen!© bund-verlag.de (BE)








Facebook







Twitter







Xing





WhatsApp



LinkedIn


",,,,,,,,,,,,,,,
https://news.google.com/rss/articles/CBMiUmh0dHBzOi8vd3d3LmRlci1iYW5rLWJsb2cuZGUva2ktZXJ3YXJ0dW5nc21hbmFnZW1lbnQtbWluZHNldC90ZWNobm9sb2dpZS8zNzY2ODA4My_SAVZodHRwczovL3d3dy5kZXItYmFuay1ibG9nLmRlL2tpLWVyd2FydHVuZ3NtYW5hZ2VtZW50LW1pbmRzZXQvdGVjaG5vbG9naWUvMzc2NjgwODMvYW1wLw?oc=5,KI braucht Erwartungsmanagement und Mindset - Der Bank Blog,2020-08-18,Der Bank Blog,https://www.der-bank-blog.de,Für den Erfolg Künstlicher Intelligenz sind der klare Blick auf das Mögliche und ein unterstützendes Transformationsmanagement wesentlich.,"Bank, Sparkasse, Maschinelles Lernen, Künstliche Intelligenz",Für den Erfolg Künstlicher Intelligenz sind der klare Blick auf das Mögliche und ein unterstützendes Transformationsmanagement wesentlich.,Für den Erfolg Künstlicher Intelligenz sind der klare Blick auf das Mögliche und ein unterstützendes Transformationsmanagement wesentlich.,N/A,N/A,"


Technologie



			KI braucht Erwartungsmanagement und Mindset			

Künstliche Intelligenz und digitale Transformation im Banking


von 
				Carlos Gómez-Sáez 

18. August 2020



 


Von der Mustererkennung bis zur Robotik – die Praxis der Künstlichen Intelligenz besteht heute größtenteils in Anwendungen Maschinellen Lernens. Ihre erfolgreiche Nutzung braucht den klaren Blick auf das Mögliche und ein unterstützendes Transformationsmanagement.
Von der Mustererkennung bis zur Robotik – die Praxis der Künstlichen Intelligenz besteht heute größtenteils in Anwendungen Maschinellen Lernens.Partner des Bank Blogs
Künstliche Intelligenz (KI) oder auch Artificial Intelligence (AI): Es gibt wohl kaum einen Begriff im globalen Business, der mehr Fantasie weckt und dem ein größeres Maß an Disruption zugetraut wird. Manche halten KI sogar für die wichtigste Erfindung der Menschheit. Diese Einschätzung resultiert wahrscheinlich aus der Vision der sogenannten starken KI – einer KI, die irgendwann die gesamten kognitiven Fähigkeiten des Menschen in Rechenoperationen abbilden können soll.
Noch ist es aber nicht soweit. Noch bewegen wir uns auf der Ebene der sogenannten schwachen KI. Sie ist lediglich dazu in der Lage, eine spezifische Aufgabe eigenständig zu erfüllen. Moderne Anwendungen der Künstlichen Intelligenz benutzen für das Erlernen solcher Aufgaben Methoden des Maschinellen Lernens. Das Wissen oder das Verständnis, das die KI benötigt, um intelligentes Verhalten zu zeigen, wird dabei durch das Analysieren von Daten gewonnen.
KI ist heute Maschinelles Lernen
Was den Grad der Intelligenz, also den Grad des selbständigen Agierens in unseren Systemen angeht, sind wir mit dem Maschinellen Lernen zwar schon Meilen entfernt vom harten Codieren früherer Tage. Und auch das Maschinelle Lernen selbst hat sich kontinuierlich weiterentwickelt. Die Fortschritte kommen dabei aus drei Bereichen: Aus immer besseren Algorithmen wie beispielsweise den Transformern bei der Sprachverarbeitung; Zweitens aus besseren Daten. So wurden große Verbesserungen im Bereich der Bilderkennung oft durch umfangreichere Datensätzen erreicht. Und nicht zuletzt aus einer immer leistungsfähigeren und günstigeren Hardware.
Die unterschiedlichen Modelle des Maschinellen Lernens differenzieren sich hauptsächlich hinsichtlich der Komplexität der Zusammenhänge, die aus den Daten gewonnen werden können. Bekanntgeworden sind hier insbesondere die Ansätze des Deep Learnings, wie beispielsweise Generative Adversarial Networks (GANs), die auf dem Einsatz großer neuronaler Netze basieren. Aber wir sind trotz aller Fortschritte noch nicht bei einer starken KI, die sich selbstständig wie der menschliche Verstand an neu auftretende Situationen anpassen und damit einhergehende Aufgaben lösen kann. Mit anderen Worten: Wenn wir heute über die Praxis der künstlichen Intelligenz reden, dann reden wir über die heutigen Möglichkeiten Maschinellen Lernens. Wohlwissend, dass das Potenzial unendlich viel größer ist. Unsere Erwartungen an KI müssen sich diesem Umstand anpassen.
Spezifische Algorithmen für spezifische Lösungen
KI auf Basis von Maschinellem Lernen heißt, dass Entscheidungen oder Vorhersagen automatisch von einem System getroffen werden, das seine Aufgabe durch Analysieren von Daten gelernt hat und auf Basis bestimmter Lernkonzepte immer weiter lernt. Er tut dies immer für eine spezifische Aufgabe und die dabei zurückgelegte Lernkurve ist nicht ohne weiteres übertragbar.
Selbst die besten Anwendungen im Bereich der Sprach- oder Bildverarbeitung versagen völlig, sobald sie eine andere Aufgabe ausführen sollen als die, für die sie entwickelt wurden. Ein Chatbot, der auf Kundenanfragen reagiert, ist aus technischer Sicht völlig getrennt von einer Anwendung, die Betrugsrisiken vorhersagt. Unterschiedliche KI-Dienste werden unabhängig voneinander erdacht, entwickelt und betrieben.
KI als Werttreiber
Aber bereits in ihren jetzigen Formen kann KI die Funktion eines Werttreibers übernehmen. Einer aktuellen McKinsey-Untersuchung zufolge wird ihr Einsatz von den Unternehmen jeweils vor allem am Schwerpunkt ihrer Wertschöpfung vorangetrieben: Physische Robotik in der verarbeitenden Industrie, Big Data sowie Text- und Sprach-Processing dort, wo die Wertschöpfung eher am Kunden stattfindet. Und alle Industrien setzen sie bevorzugt dort ein, wo es um den Ersatz einfacher manueller Tätigkeiten geht.
Im Bereich Finance reichen die Use Cases des Maschinellen Lernens von der Kostenersparnis durch die Automatisierung repetitiver Tätigkeiten über die Erhöhung der Customer Experience durch smarte, digitale Services bis hin zu komplexen Anwendungen wie beispielsweise bei der Betrugsprävention im Retail-Zahlungsverkehr oder der Geldwäschebekämpfung, wo gegeneinander laufende neuronale Netze die Treffsicherheit der Systeme optimieren.
Im Bereich des Payments experimentieren derzeit chinesische Firmen mit einem Bilderkennungsansatz, bei dem das Gesicht des Kunden am Ladeneingang gescannt und beim Verlassen mit den Zahlungsdaten des Einkaufs verknüpft wird. Ob man eine solche Lösung allerdings will, ist eine ganz andere Frage.
Step by Step
So oder so: Der Einsatz von KI wird zunehmen. Laut einer Accenture-Studie sind 74 Prozent der Bankmanager überzeugt, dass sich ihre Branche durch den Einsatz intelligenter Technologien vollständig verändern wird. Wir stehen also vor einer gigantischen Transformation und damit vor Richtungsentscheidungen:

Mit welcher neuen Technik müssen wir unsere IT ausstatten?
Wie organisieren wir in Zukunft unsere Daten?
Wie setzen wir rechenintensive Lernalgorithmen ein, ohne den Betrieb unserer geschäftskritischen Anwendungen zu stören?
Wie gehen wir damit um, dass der Einsatz von Chatbots die Kommunikation mit dem Kunden völlig verändert?
Und vor allem: Wie werden wir gemeinsam mit einer Künstlichen Intelligenz Aufgaben bearbeiten?

Künstliche Intelligenz ist kein zentrales System, das auf einem Server läuft und eigenständig Verantwortung für Aufgaben übernimmt. Vielmehr werden viele kleine Teilsysteme eingesetzt, die zwar auch von immer größeren Datenmengen profitieren, vor allem aber durch zunehmende Erfahrung der damit befassten Menschen. Es ist daher wichtig, früh viele kleine Schritte zu gehen, anstatt auf den großen Sprung zu warten. Trends wie Agile Softwareentwicklung und das Bereitstellen von Microservices werden die Entwicklung neuer Anwendungen und ihre Integration in das Gesamtsystem beschleunigen.
Allerdings: Wer jetzt seine IT-Abteilung Sprint um Sprint neue KI getriebene Anwendungen entwickeln lässt, sollte einen zentralen Punkt nicht vergessen: Große Herausforderungen bei der Umsetzung von KI-Anwendungen liegen nicht nur in der IT-Abteilung, nicht nur bei der Arbeit mit Daten und Algorithmen, sondern vor allem auch bei der Änderung des Mindsets im ganzen Unternehmen.
Raus aus IT, mit KI
Das Thema Künstliche Intelligenz darf daher auch kein reines Thema der IT-Abteilung sein. Die IT kann nicht abschätzen, welche Prozesse wichtig zu automatisieren wären, welche intelligenten Anwendungen die Marketing Abteilung unterstützen würde und welche Prognosen zu besseren Risikoabschätzungen führen würden. Es reicht auch nicht, dass eine Anwendung, die das Risk Management unterstützen soll, von der IT-Abteilung akzeptiert und geschätzt wird.
Neben der technologischen Transformation ist eine große Aufgabe die Transformation im Denken der Mitarbeiter. Neue Produkte werden nicht von einer Künstlichen Intelligenz kreiert, sondern von Mitarbeitern, die digitale Produkte und deren Potenziale durch den Einsatz von KI verstehen. Mitarbeiter werden die Dienste der KI in ihrer täglichen Arbeit auch nur dann als Unterstützung wahrnehmen und akzeptieren, wenn sie sich einen Eindruck von deren Fähigkeiten und Grenzen machen konnten.
Der Einsatz von Künstlicher Intelligenz ist eine Mentalität, kein Ereignis oder abschließbares Projekt. Neue KI-Anwendungen entstehen nicht in Form von Geistesblitzen, sondern weil Mitarbeitern das Potenzial Künstlicher Intelligenz bewusst ist und die Organisation durchlässig und aufnahmebereit ist.

VR Payment ist Teil der Genossenschaftlichen FinanzGruppe Volksbanken Raiffeisenbanken und zählt zu den führenden Payment-Anbietern in Deutschland.
Mehr über das Partnerkonzept des Bank Blogs erfahren Sie hier.

",http://schema.org,NewsArticle,KI braucht Erwartungsmanagement und Mindset,https://www.der-bank-blog.de/ki-erwartungsmanagement-mindset/technologie/37668083/,"{'@type': 'ImageObject', 'url': 'https://www.der-bank-blog.de/wp-content/uploads/2020/07/ki-transformation-702x422.jpg', 'width': 702, 'height': 422}",2020-08-18T05:25:42+02:00,2024-05-25T09:42:25+02:00,Technologie,"{'@type': 'Person', 'name': 'Carlos Gómez-Sáez'}","{'@type': 'Organization', 'name': 'Der Bank Blog', 'logo': {'@type': 'ImageObject', 'url': 'https://www.der-bank-blog.de/wp-content/uploads/2015/07/trends-und-strategien-fuer-finanzdienstleister.png'}}","{'@type': 'WebPage', '@id': 'https://www.der-bank-blog.de/ki-erwartungsmanagement-mindset/technologie/37668083/'}",,,,
https://news.google.com/rss/articles/CBMiWWh0dHBzOi8vd3d3LmNhcGdlbWluaS5jb20vZGUtZGUvaW5zaWdodHMvYmxvZy9kZXNpZ24tcGF0dGVybnMtaW4tZGVyLXNvZnR3YXJlZW50d2lja2x1bmcv0gEA?oc=5,Von wegen abstrakt: Design Patterns in der Softwareentwicklung - Capgemini,2020-08-17,Capgemini,https://www.capgemini.com,"Erfahre, welche Vorteile die Softwareentwicklung mit Design Patterns bietet, wie sie in der Praxis eingesetzt werden und wie man ihre Anwendung lernt.",['karriere'],"Erfahre, welche Vorteile die Softwareentwicklung mit Design Patterns bietet, wie sie in der Praxis eingesetzt werden und wie man ihre Anwendung lernt.",N/A,N/A,N/A,"

Von wegen abstrakt: Design Patterns in der SoftwareentwicklungCapgemini Karriere17. Aug. 2020 
FacebookLinkedinDesign Patterns sind abstrakt und komplex? Im Gegenteil! In der Praxis machen sie die Softwareentwicklung im Team wesentlich effizienter und strukturierter, betont Lutz Böhnstedt. Warum sich angehende Software Engineers mit Design Patterns auseinandersetzen sollten, erfährst du in diesem Artikel.Als Senior IT Architekt bei Capgemini ist Lutz in viele Vorstellungsgespräche involviert und verrät im Interview einige Tipps für angehende Software Engineers und IT-Architekt*innen. Der Diplominformatiker ist seit 2007 bei Capgemini und hat in verschiedenen Rollen vorwiegend fachlich gearbeitet. Er erklärt die Vorteile von Design Patterns, wie man sie anwendet und gibt anschauliche Praxis-Beispiele. 

Software Design Patterns – schneller zur Lösung
Was sind Design Patterns?
Software Design Patterns, auf Deutsch Entwurfsmuster, sind Templates bzw. strukturierte Lösungen für wiederkehrende Probleme, auf die man im Softwaredesign und in der -Entwicklung immer wieder trifft – quasi eine Musterlösung, die Strukturen schafft. Denn Struktur ist eines der wichtigsten Konzepte, um die Komplexität der Informatik beherrschbar zu machen.
Warum sind Software Design Patterns wichtig?
Zum einen arbeitet man schneller und effizienter, da Design Patterns „vorgefertigte“ Lösungsansätze für komplexe Probleme bieten. Zum anderen erleichtern Design Patterns das tagtägliche Arbeiten im Team enorm, da sie uns eine gemeinsame Kommunikationsbasis bzw. ein einheitliches Vokabular bieten. Design Patterns sind eine klassische Software Engineering Methode, die dem Code Struktur geben. Wer von außen auf den Code schaut, kann dann relativ schnell erkennen, was der Code macht.
Für wen bzw. welche Berufsfelder sind Design Patterns relevant?
Dieses Konzept wird vor allem im Bereich der Softwareentwicklung und des Softwaredesigns angewandt – ursprünglich stammt die Idee aber aus den Entwurfsmustern der IT-Architektur. Daher sind Design Patterns vor allem für Software Engineers und IT-Architekten beim Design von Code und Architekturen relevant. Business Analysten müssen nicht unbedingt konkrete Patterns kennen. Dennoch bin ich auch in meiner früheren Rolle als Business Analyst immer wieder auf die gleichen Probleme innerhalb eines Projekts gestoßen und habe mir dazu Designs bzw. abstrakte Lösungen überlegt.

Get the future you want – als DevOps Engineer (w/m/d) bei CapgeminiDu möchtest nachhaltige und wartbare IT-Architekturen für komplexe IT-Landschaften entwickeln? Dann bewirb dich jetzt!Jetzt bewerben

Design Patterns in der Anwendung
Welche verschiedenen Design Patterns gibt es?
Es wird grob zwischen drei Klassen unterschieden. Diese Differenzierung ergibt sich daraus, dass man die Design Patterns an verschiedene Situationen anpasst und mit ihnen unterschiedliche Problematiken lösen möchte.

Erzeugungsmuster (Creational Patterns): Hier liegt der Fokus stark auf der Erzeugung von Objekten. Die Konstruktion eines Objekts wird von seiner Repräsentation entkuppelt. Das heißt, ich gebe den Befehl, dass ich das Objekt brauche, aber wie es erzeugt wird, ist nach außen gekapselt – also nach außen abgeschirmt und daher für mich nicht ersichtlich.
Strukturmuster (Structural Patterns): Diese bieten einen Lösungsansatz für die Fragestellung, wie bestimmte Entitäten zueinander in Bezug stehen sollen. Sie unterstützen dabei, die Struktur der gesamtem IT-Struktur sauber zu designen.
Verhaltensmuster (Behavioural Patterns): Das sind Patterns, die oftmals komplexes Verhalten von Code kapseln, um nach außen hin eine möglichst einfache Struktur und Schnittstelle transparent darzustellen.

Kannst du uns das Prinzip eines Design Patterns an einem konkreten Beispiel erklären?
Das Factory Pattern ist eines der bekanntesten Entwurfsmuster und repräsentiert die Klasse der Erzeugungsmuster am besten: Dieses Software Pattern kapselt die Instanziierung – also die Erstellung eines Objekts – nach außen hin für den Nutzer, für den Prozess oder für den Teil des Programms, der dieses Objekt zur Laufzeit anfordert.
Ich mache es an einem Beispiel anschaulich: Wer ein Zeichenprogramm programmiert, macht sich darüber Gedanken, dass Nutzer später damit geometrische Formen erstellen möchten. Man weiß noch nicht, welche Anforderung an das Objekt zur Laufzeit gestellt wird, beispielsweise welche geometrische Form in dem Moment gezeichnet werden soll. Das lässt sich durch eine Factory designen, die erst zur Laufzeit übergeben bekommt, was sie dann zurückgeben soll: zum Beispiel einen Kreis. Wie eine kleine Fabrik, die zur Laufzeit genau das produziert, was gefordert ist. Wie sie das macht, ist für mich als Nutzer jedoch irrelevant. Ohne das Factory Pattern müsste das Graphic User Interface jede Anforderung zur Laufzeit selbst instanziieren – das wird sehr komplex und unübersichtlich. Diese Funktionalität kapselt die Factory nach außen.
Was wäre ein Beispiel für ein Design Pattern aus der Klasse der Verhaltensmuster?
Ein Beispiel für die Klasse der Verhaltensmuster ist das Strategy Pattern. Dieses ist dann anzuwenden, wenn ich den Algorithmus, also das Verhalten bzw. eine konkrete Strategie, kapseln möchte. Dieses Pattern könnte man in der Routennavigation anwenden, beispielsweise wenn ich die Reiseroute von meinem Capgemini Standort Köln zum Standort Düsseldorf berechnen möchte. Als Nutzer einer Navigations-App entscheide ich, ob ich gehen, Auto fahren oder öffentliche Verkehrsmittel nutzen möchte – die Strategie wählt dann erst zur Laufzeit aus, welcher Algorithmus gebraucht wird.
Die Routenberechnung ist also abstrakt das gleiche, die Verfeinerung ist das Fortbewegungsmittel. Die Nutzeroberfläche der App kommuniziert mit dem Strategie-Interface, welches in dem Moment auswertet, wie es sich verhalten und welchen Algorithmus es ausführen muss. Und kapselt wiederum die Komplexität nach außen. Für den User der App ist das natürlich irrelevant, aber es vereinfacht die Kommunikation zwischen der App-Oberfläche und der Logik dahinter. Das Prinzip des nach außen kapseln ist grundsätzlich entscheidend für alle Design Patterns – auch für Structural Patterns.
Was gilt es bei der Anwendung von Design Patterns zu beachten?
Aus meiner Sicht, dass man deren Verwendung im Code durch die gängige Namenskonventionen kenntlich und lesbar macht. Damit auch andere, die damit arbeiten, das angewandte Design Pattern im Code oder Design schnell wiedererkennen. Außerdem sollte man keine Angst davor haben, Software Patterns auch anzuwenden und sich sogar eigene Patterns zu überlegen. Sie machen das Leben leichter.
Warum sollten sich Software Engineers eigene Design Patterns definieren?
Es ist nicht so, dass die heute niedergeschriebenen Patterns das allumfassende und definierte Wissen sind. Innerhalb eines Projektes stößt man immer wieder auf Probleme, für die man sich ein Muster zur Problemlösung designt. Es kommt auch durchaus vor, dass sich Kolleginnen oder Kollegen eigene Patterns überlegen und diese im Projekt-Umfeld für alle Teammitglieder etablieren.
Design Patterns lernen – Tipps für Bewerber*innen
Welche Kenntnisse sollten Absolvent*innen im Bereich Design Patterns mitbringen?
Design Patterns kommen in nahezu allen unseren Projekten zum Einsatz – sie gehören zum Berufsalltag eines Software Engineers bei Capgemini dazu. Deshalb ist es wichtig, sich auch schon zu Beginn der Karriere damit auseinanderzusetzen. Ich weiß aus eigener Erfahrung, dass das Thema im Studium oft sehr abstrakt vermittelt wird – obwohl es das gar nicht ist. Absolventen sollten sich ein allgemeines Verständnis für Softwareentwicklung und den -Entwicklungsprozess aufbauen. Denn genau hier kommen Design Patterns zum Tragen, die das Design strukturieren, es lesbar und wartbar machen, damit auch in 10 Jahren noch nachvollziehbar ist, welche Methode und Strukturen angewandt wurden. Jobstarter sollten daher wissen, was Design Patterns sind und wozu man sie nutzt. Angehende Software Engineers sollten eine Idee von möglichen Anwendungsszenarien und ein Verständnis für den Sinn dahinter mitbringen.
Wie können Studierende oder Absolvent*innen die Anwendung von Design Patterns lernen bzw. sich entsprechendes Wissen aneignen?
Ich empfehle das Buch „Design Patterns“ von Gamma, Helm, Johnson und Vlissides. Diese vier Herren haben initiativ ein umfassendes Werk zum Thema geschrieben. Teilweise etwas trocken und abstrakt geschrieben, aber ich kann es jedem ans Herz legen, der sich auch beruflich damit beschäftigen möchte. Außerdem gibt es Websites wie Refactoring Guru oder Sourcemaking auf welchen Design Patterns beispielhaft und oft spielerisch erklärt werden – inklusive spannender Cases, die das Thema greifbar machen.
Werden Design Patterns in Vorstellungsgesprächen bei Capgemini thematisiert?
Die Fragen im Vorstellungsgespräch ergeben sich oftmals im Gesprächsverlauf. Software Engineers sollten nicht nur gut programmieren können, sondern auch das große Ganze im Blick behalten. Bewerberinnen und Bewerber sollten mir zeigen können, dass sie mit der klaren Definition von Anforderungen vertraut und sich dessen Wichtigkeit bewusst sind. Denn ziellos drauf los zu programmieren ist nicht nur in der Projektarbeit mit dem Kunden ein No-Go.
Im Rahmen der Anforderungsdefinition gehört auch dazu, sich Gedanken zu machen, ob der Einsatz von Design Patterns sinnvoll ist. Wenn mir Studierende erzählen, welche Anforderungen sie für ihre Abschlussarbeit definiert haben, frage ich schonmal, nach welchen Design-Prinzipien sie vorgegangen sind und ob ihnen der Begriff „Design Patterns“ etwas sagt. Wenn sie mir dann den Sinn von Design Patterns erläutern können, hinterlässt das einen sehr positiven Eindruck.
Zum Schluss: Welche Tipps möchtest du Bewerber*innen in Bezug auf Design Patterns mit auf den Weg geben?
Tipp 1: Habt keine Scheu davor! Das Thema verliert die Abstraktion, wenn Ihr Euch praktisch damit auseinandersetzt – beispielweise indem Ihr Euch Praxisbeispiele anschaut.
Tipp 2: Definiert Euch Eure eigenen Design Patterns! Überlegt doch mal, was für ein Pattern Eure tägliche Arbeit erleichtern könnte und probiert Euch aus.
Tipp 3: Eignet Euch ein allgemeines Verständnis vom Softwareentwicklungsprozess an. Ein guter Software Engineer sollte nicht nur coden können, sondern auch einen Blick für das große Ganze haben.
Vielen Dank für das Interview und die vielen Tipps, Lutz.

Genug Theorie – Bist du bereit für den ersten Job?Dann bewirb dich jetzt! Finde in unserem Jobportal alle verfügbaren Stellen. Zum Jobportal 
Erfahre mehr über den Berufsalltag bei Capgemini: Einfacher als du denkst: Quereinstieg in die SoftwareentwicklungCapgemini Karriere25. Mai 2022Technische Kompetenz trifft kommunikative Begabung: Cybersecurity Analytics bei CapgeminiCapgemini Karriere29. Okt. 2021Gaming: Vom Hobby zum IT-BerufCapgemini Karriere21. Sept. 2021 
",https://schema.org,NewsArticle,Von wegen abstrakt: Design Patterns in der Softwareentwicklung,http://www.capgemini.com/de-de/insights/blog/design-patterns-in-der-softwareentwicklung/,"{'@type': 'ImageObject', 'url': 'https://www.capgemini.com/de-de/wp-content/uploads/sites/8/2022/08/software-design-patterns.jpg'}",2020-08-17T09:07:00Z,2024-06-13T14:46:39Z,Karriere,"[{'@type': 'Person', 'name': 'Sai Kiran'}]","{'@type': 'Organization', 'name': 'Capgemini Germany', 'logo': ''}","{'@type': 'WebPage', '@id': 'http://www.capgemini.com/de-de/insights/blog/design-patterns-in-der-softwareentwicklung/'}","[{'@type': 'WebPage', '@id': 'https://www.capgemini.com/de-de/insights/blog/design-patterns-in-der-softwareentwicklung/', 'url': 'https://www.capgemini.com/de-de/insights/blog/design-patterns-in-der-softwareentwicklung/', 'name': 'Von wegen abstrakt: Design Patterns in der Softwareentwicklung', 'isPartOf': {'@id': 'https://www.capgemini.com/de-de/#website'}, 'primaryImageOfPage': {'@id': 'https://www.capgemini.com/de-de/insights/blog/design-patterns-in-der-softwareentwicklung/#primaryimage'}, 'image': {'@id': 'https://www.capgemini.com/de-de/insights/blog/design-patterns-in-der-softwareentwicklung/#primaryimage'}, 'thumbnailUrl': 'https://www.capgemini.com/de-de/wp-content/uploads/sites/8/2022/08/software-design-patterns.jpg', 'datePublished': '2020-08-17T09:07:00+00:00', 'dateModified': '2024-06-13T14:46:39+00:00', 'author': {'@id': 'https://www.capgemini.com/de-de/#/schema/person/e18c469582cc4e2dd2649041406912d2'}, 'description': 'Erfahre, welche Vorteile die Softwareentwicklung mit Design Patterns bietet, wie sie in der Praxis eingesetzt werden und wie man ihre Anwendung lernt.', 'inLanguage': 'de-DE', 'potentialAction': [{'@type': 'ReadAction', 'target': ['https://www.capgemini.com/de-de/insights/blog/design-patterns-in-der-softwareentwicklung/']}]}, {'@type': 'ImageObject', 'inLanguage': 'de-DE', '@id': 'https://www.capgemini.com/de-de/insights/blog/design-patterns-in-der-softwareentwicklung/#primaryimage', 'url': 'https://www.capgemini.com/de-de/wp-content/uploads/sites/8/2022/08/software-design-patterns.jpg', 'contentUrl': 'https://www.capgemini.com/de-de/wp-content/uploads/sites/8/2022/08/software-design-patterns.jpg', 'width': 960, 'height': 641, 'caption': 'software-design-patterns'}, {'@type': 'WebSite', '@id': 'https://www.capgemini.com/de-de/#website', 'url': 'https://www.capgemini.com/de-de/', 'name': 'Capgemini Germany', 'description': 'Capgemini Germany', 'potentialAction': [{'@type': 'SearchAction', 'target': {'@type': 'EntryPoint', 'urlTemplate': 'https://www.capgemini.com/de-de/?s={search_term_string}'}, 'query-input': 'required name=search_term_string'}], 'inLanguage': 'de-DE'}, {'@type': 'Person', '@id': 'https://www.capgemini.com/de-de/#/schema/person/e18c469582cc4e2dd2649041406912d2', 'name': 'Sai Kiran', 'url': 'https://www.capgemini.com/de-de/author/saikiranb/'}]",https://www.capgemini.com/de-de/wp-content/uploads/sites/8/2022/08/software-design-patterns.jpg?w=150&h=150&crop=1,['Sai Kiran'],2020-08-17T09:07:00Z
